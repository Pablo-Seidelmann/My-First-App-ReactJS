{"version":3,"sources":["components/AddCategory.jsx","components/SetCategory.jsx","App.js","reportWebVitals.js","index.js"],"names":["AddCategory","setCategories","Form","styled","form","Input","input","Button","button","props","primary","hover","DivButton","div","useState","inputValue","setInputValue","id","onSubmit","e","preventDefault","length","cats","swal","title","text","icon","type","value","onChange","target","SetCategory","category","DivList","List","li","App","defaultCategories","categories","Title","h2","map","toString","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"unCAKA,IAyFeA,EAzFK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAEbC,EAAOC,IAAOC,KAAV,KAKJC,EAAQF,IAAOG,MAAV,KAULC,EAASJ,IAAOK,OAAV,KAGa,SAAAC,GAAK,OAAIA,EAAMC,QAAU,UAAY,UAQjC,SAAAD,GAAK,OAAIA,EAAME,MAAQ,UAAY,QAK1DC,EAAYT,IAAOU,IAAV,KAjCwB,EAuCDC,mBAAU,gBAvCT,mBAuC/BC,EAvC+B,KAuCnBC,EAvCmB,KA2DvC,OAEI,eAACd,EAAD,CAAMe,GAAK,gBAAgBC,SAlBV,SAAEC,GACnBA,EAAEC,iBAEEL,EAAWM,OAAU,GACrBpB,GAAe,SAAAqB,GAAI,4BAASA,GAAT,CAAeP,OAClCC,EAAe,KAEdO,IAAK,CACFC,MAAO,8BACPC,KAAM,oCACNC,KAAM,UACNlB,OAAQ,SAOhB,UAEI,cAACH,EAAD,CACIY,GAAK,iBACLU,KAAO,OACPC,MAAUb,EACVc,SA1Bc,SAAEV,GAAF,OAASH,EAAeG,EAAEW,OAAOF,UA6BnD,4BAAKb,IATT,IAWI,eAACH,EAAD,WAEA,cAACL,EAAD,CAAQU,GAAK,kBAAkBP,SAAO,EAACiB,KAAK,SAA5C,oBAEA,cAACpB,EAAD,CAAQU,GAAK,kBAAkBN,OAAK,EAACgB,KAAK,SAA1C,6B,uQC7EZ,IA6BeI,EA7BK,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAEbC,EAAU9B,IAAOU,IAAV,KAKPqB,EAAO/B,IAAOgC,GAAV,KAKV,OAEI,cAACF,EAAD,UAEI,cAACC,EAAD,CAAMjB,GAAK,YAAX,SACMe,O,sKCdlB,IAuCeI,EAvCH,SAAC,GAAgC,IAAD,IAA7BC,yBAA6B,MAAT,GAAS,IAEJvB,mBAAUuB,GAFN,mBAElCC,EAFkC,KAEtBrC,EAFsB,KAIpCsC,EAAQpC,IAAOqC,GAAV,KAOX,OAEE,eAAC,WAAD,WAEE,cAACD,EAAD,CAAOtB,GAAK,YAAZ,2BAEA,cAAC,EAAD,CAAahB,cAAkBA,IAE/B,uBAEA,6BAGIqC,EAAWG,KAAK,SAAAT,GAAQ,OAAI,cAAC,EAAD,CAA2CA,SAAaA,GAAnCA,EAASU,qBCnBrDC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.80bac17b.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport swal from 'sweetalert';\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n\r\n    const Form = styled.form`\r\n        margin: 50px;\r\n        text-align: center;\r\n    `\r\n\r\n    const Input = styled.input`\r\n        color: grey;\r\n        border-radius: 20px;\r\n        border: 1px solid #38C98D;\r\n        font-weight: bold;\r\n        font-size: 15px;\r\n        padding: 40px;\r\n        text-align: center;\r\n    `\r\n\r\n    const Button = styled.button`\r\n        border-radius: 5px;\r\n        border: 1px solid grey;\r\n        background-color: ${ props => props.primary ? '#38C98D' : 'grey' };\r\n        font-weight: bold;\r\n        color: #fff;\r\n        margin-left: 10px;\r\n        padding: 8px 20px; \r\n\r\n        &:hover\r\n        {\r\n            background-color: ${ props => props.hover ? '#808090' : null };\r\n            transition: 1.5s;\r\n        }\r\n    `\r\n\r\n    const DivButton = styled.div`\r\n        position: relative;\r\n        text-align: center;\r\n        top: 20px;\r\n    `\r\n\r\n    const [ inputValue, setInputValue ] = useState( 'Escribe Aca!' );\r\n\r\n    const handleInputChange = ( e ) => setInputValue( e.target.value );\r\n\r\n    const handleSubmit = ( e ) => {\r\n        e.preventDefault();\r\n\r\n        if( inputValue.length  > 5 ){\r\n            setCategories( cats => [ ...cats, inputValue ] );\r\n            setInputValue( '' );\r\n         } else {\r\n             swal({\r\n                title: \"A Ocurrido Algo Inesperado!\",\r\n                text: \"Debe haber al menos 5 Caracteres!\",\r\n                icon: \"warning\",\r\n                button: \"Ok!\",\r\n              });\r\n        };\r\n    };\r\n    \r\n    return (\r\n\r\n        <Form id = 'Form-Category' onSubmit = { handleSubmit } >\r\n            \r\n            <Input\r\n                id = 'Input-Category' \r\n                type = 'text'\r\n                value = { inputValue }\r\n                onChange = { handleInputChange }\r\n            />\r\n\r\n            <p>{ inputValue }</p> {/* Despues Borrar! */}\r\n\r\n            <DivButton>\r\n\r\n            <Button id = 'Button-Category' primary type='submit'>Enviar</Button>\r\n\r\n            <Button id = 'Button-Category' hover type='submit'>Cancelar</Button>\r\n\r\n            </DivButton>\r\n\r\n        </Form>\r\n        \r\n    );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n};\r\n\r\nexport default AddCategory;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'; \r\nimport styled from 'styled-components';\r\n\r\nconst SetCategory = ({ category }) => {\r\n\r\n    const DivList = styled.div`\r\n        margin-bottom:  20px;\r\n        text-align: center;\r\n    `\r\n\r\n    const List = styled.li`\r\n        color: #5e5e5e;\r\n        font-weight: bold;\r\n    `\r\n\r\n    return (\r\n\r\n        <DivList>\r\n            \r\n            <List id = 'list-item'>\r\n                { category }\r\n            </List>\r\n\r\n        </DivList>\r\n\r\n    );\r\n};\r\n\r\nSetCategory.propTypes = {\r\n    category: PropTypes.string.isRequired\r\n};\r\n\r\nexport default SetCategory;\r\n","import React, { Fragment, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nimport AddCategory from './components/AddCategory';\r\nimport SetCategory from './components/SetCategory';\r\n\r\nconst App = ({ defaultCategories = [] }) => {\r\n\r\n  const [ categories, setCategories ] = useState( defaultCategories );\r\n\r\n  const Title = styled.h2`\r\n    color: #38C98D;\r\n    font-weight: 900px;\r\n    font-size: 25px;\r\n    text-align: center;\r\n  `\r\n\r\n  return(\r\n\r\n    <Fragment>\r\n\r\n      <Title id = 'Title-App' >My First App!</Title>\r\n\r\n      <AddCategory setCategories = { setCategories } />\r\n\r\n      <hr />\r\n\r\n      <ol>\r\n\r\n        {\r\n          categories.map( category => <SetCategory key = { category.toString() } category = { category } />)\r\n        }\r\n        \r\n      </ol>\r\n\r\n    </Fragment>\r\n\r\n  );\r\n\r\n};\r\n\r\nApp.propTypes = {\r\n  Title: PropTypes.string.isRequired\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}