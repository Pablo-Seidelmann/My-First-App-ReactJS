{"version":3,"sources":["components/AddCategory.jsx","components/SetCategory.jsx","App.js","reportWebVitals.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","className","onSubmit","e","preventDefault","length","cats","swal","title","text","icon","button","type","value","onChange","target","SetCategory","category","App","defaultCategories","categories","map","toString","defaultProps","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQA2DeA,G,MArDK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAGDC,mBAAU,gBAHT,mBAG/BC,EAH+B,KAGnBC,EAHmB,KAyBvC,OAEI,uBAAMC,UAAY,gBAAgBC,SApBjB,SAAEC,GACnBA,EAAEC,iBAEEL,EAAWM,OAAU,GACrBR,GAAe,SAAAS,GAAI,4BAASA,GAAT,CAAeP,OAClCC,EAAe,KAEdO,IAAK,CACFC,MAAO,8BACPC,KAAM,oCACNC,KAAM,UACNC,OAAQ,SAShB,UAEI,uBACIV,UAAY,iBACZW,KAAO,OACPC,MAAUd,EACVe,SA5Bc,SAAEX,GAAF,OAASH,EAAeG,EAAEY,OAAOF,UA+BnD,sBAAKZ,UAAY,UAAjB,UAEA,wBAAQA,UAAY,cAAcW,KAAK,SAAvC,oBAEA,wBAAQX,UAAY,gBAAgBW,KAAK,SAAzC,8BCtBGI,G,MAnBK,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAEnB,OAEI,qBAAKhB,UAAY,WAAjB,SAEI,oBAAIA,UAAY,OAAhB,SACMgB,QCLZC,EAAM,SAAC,GAAuC,IAAD,IAApCC,yBAAoC,MAAhB,GAAgB,EAAZX,EAAY,EAAZA,MAAY,EAEXV,mBAAUqB,GAFC,mBAEzCC,EAFyC,KAE7BvB,EAF6B,KAIjD,OAEE,eAAC,WAAD,WAEE,oBAAII,UAAY,QAAhB,SAA0BO,IAE1B,cAAC,EAAD,CAAaX,cAAkBA,IAE/B,uBAEA,6BAGIuB,EAAWC,KAAK,SAAAJ,GAAQ,OAAI,cAAC,EAAD,CAA2CA,SAAaA,GAAnCA,EAASK,qBAepEJ,EAAIK,aAAe,CACjBf,MAAO,iBAGMU,QC/BAM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a4fa6aa6.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport swal from 'sweetalert';\r\n\r\nimport './AddCategory.css'\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n    \r\n\r\n    const [ inputValue, setInputValue ] = useState( 'Escribe Aca!' );\r\n\r\n    const handleInputChange = ( e ) => setInputValue( e.target.value );\r\n\r\n    const handleSubmit = ( e ) => {\r\n        e.preventDefault();\r\n\r\n        if( inputValue.length  > 5 ){\r\n            setCategories( cats => [ ...cats, inputValue ] );\r\n            setInputValue( '' );\r\n         } else {\r\n             swal({\r\n                title: \"A Ocurrido Algo Inesperado!\",\r\n                text: \"Debe haber al menos 5 Caracteres!\",\r\n                icon: \"warning\",\r\n                button: \"Ok!\",\r\n              });\r\n    \r\n        };\r\n\r\n    };\r\n    \r\n    return (\r\n\r\n        <form className = 'form-category' onSubmit = { handleSubmit } >\r\n            \r\n            <input\r\n                className = 'input-category'\r\n                type = 'text'\r\n                value = { inputValue }\r\n                onChange = { handleInputChange }\r\n            />\r\n            \r\n            <div className = 'btn-div'>\r\n\r\n            <button className = 'btn-primary' type='submit'>Enviar</button>\r\n\r\n            <button className = 'btn-secondary' type='submit'>Cancelar</button>\r\n\r\n            </div>\r\n\r\n        </form>\r\n        \r\n    );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n};\r\n\r\nexport default AddCategory;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'; \r\n\r\nimport './SetCategory.css'\r\n\r\nconst SetCategory = ({ category }) => {\r\n\r\n    return (\r\n\r\n        <div className = 'div-list'>\r\n            \r\n            <li className = 'list'>\r\n                { category }\r\n            </li>\r\n\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nSetCategory.propTypes = {\r\n    category: PropTypes.string.isRequired\r\n};\r\n\r\nexport default SetCategory;\r\n","import React, { Fragment, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './App.css';\r\nimport AddCategory from './components/AddCategory';\r\nimport SetCategory from './components/SetCategory';\r\n\r\nconst App = ({ defaultCategories = [], title }) => {\r\n\r\n  const [ categories, setCategories ] = useState( defaultCategories );\r\n\r\n  return(\r\n\r\n    <Fragment>\r\n\r\n      <h2 className = 'title'>{ title }</h2>\r\n\r\n      <AddCategory setCategories = { setCategories } />\r\n\r\n      <hr />\r\n\r\n      <ol>\r\n\r\n        {\r\n          categories.map( category => <SetCategory key = { category.toString() } category = { category } />)\r\n        }\r\n        \r\n      </ol>\r\n\r\n    </Fragment>\r\n\r\n  );\r\n\r\n};\r\n\r\nApp.propTypes = {\r\n  title: PropTypes.string.isRequired\r\n}\r\n\r\nApp.defaultProps = {\r\n  title: 'My First App!'\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}